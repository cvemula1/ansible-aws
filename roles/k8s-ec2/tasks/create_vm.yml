  - name: Start k8s head node
    ec2:
      region: "{{ aws_region }}"
      image: "{{ k8s_template }}"
      instance_type: "{{ k8s_instance_type }}"
      key_name: "{{ ssh_key }}"
      group: "{{ k8s_security_group_name }}"
      user_data: "{{ lookup('template', '../templates/k8s-master.j2') }}"
      wait: yes
    register: k8s_master
  - name: check for public ip
    debug: "msg= k8s master IP is: '{{ item.public_ip }}'"
    with_items: k8s_master.instances

  - name: Add new instance to host group
    add_host: hostname={{ item.public_ip }} groupname=k8s
    with_items: k8s_master.instances

  - name: Add instance to local inventory file
    local_action: lineinfile dest=inventory regexp="{{ item.public_ip }}" insertafter="[nodes]" line="{{ item.public_ip }} ansible_ssh_private_key_file=~/.ssh/id_rsa_{{ ssh_key }}"
    with_items: k8s_master.instances

  - name: Start k8s nodes
    ec2:
      region: "{{ aws_region }}"
      image: "{{ k8s_template }}"
      instance_type: "{{ k8s_instance_type }}"
      key_name: "{{ ssh_key }}"
      group: "{{ k8s_security_group_name }}"
      user_data: "{{ lookup('template', '../templates/k8s-node.j2') }}"
      count: "{{ k8s_num_nodes }}"
      wait: yes
    register: ec2

  - name: Add new instance to host group
    add_host: hostname={{ item.public_ip }} groupname=k8s
    with_items: ec2.instances

  - name: Add instance to local inventory file
    local_action: lineinfile dest=inventory regexp="{{ item.public_ip }}" insertafter="[nodes]" line="{{ item.public_ip }} ansible_ssh_private_key_file=~/.ssh/id_rsa_{{ ssh_key }}"
    with_items: ec2.instances
    
  - name: Add new instance to host group
    add_host: hostname={{ item.public_ip }} groupname=k8s_nodes
    with_items: ec2.instances

#  - name: Wait for SSH to come up
#    wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
#    with_items: ec2.instances
